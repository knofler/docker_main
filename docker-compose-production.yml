version: '3.4'
services:
  api:
    image: knofler/mern_aircanteen
    depends_on:
      - db
    ports:
    - 8080:8000
    networks:
      - backend
    volumes:
      - mern-starter:/usr/src/app/
    environment:
      NODE_ENV: development
      MONGO_URL: mongodb://db:27017/mern_aircanteen
      # API_URL: http://localhost:8080/api/posts
      CORS_ORIGINS: http://localhost
    deploy:
      replicas: 1
      # placement:
      #   constraint: [node.role == manager]
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
    healthcheck:
      test: ["CMD","curl","-f","http://localhost:8000"]
      interval: 2m
      timeout: 10s
      retries: 3
      start_period: 1m
  db:
    image: mongo:latest  
    networks:
      - backend
    volumes:
      - dbdata:/data/db
    ports:
      - '27018:27017'
  app:
    image: knofler/react_aircanteen
    networks:
      - frontend
      - backend
    ports:
      - 3000:3000
    depends_on:
      - api
    environment:
      API_URL: "http://192.168.99.100:8080/api/"
    volumes:
      - aircanteen:/react_aircanteen/
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 3s
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD","curl","-f","http://localhost:3000"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s
  proxy:
    image: knofler/nginx_aircanteen
    ports:
      - 80:80
    networks:
      - frontend
    depends_on:
      - app
    deploy:
      replicas: 1
      labels: [APP=Aircanteen]
      update_config:
        parallelism: 2
        delay: 5s
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD","curl","-f","http://localhost"]
      interval: 1m
      timeout: 3s
      retries: 3
      start_period: 1m
  visualizer:
    image: dockersamples/visualizer
    networks:
      - frontend
    ports:
      - "8081:8080"
    stop_grace_period: 1m30s
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]

networks:
  frontend:
  backend:

volumes:
  mern-starter:
  aircanteen:
  dbdata:
